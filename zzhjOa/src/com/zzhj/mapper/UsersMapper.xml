<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "http://mybatis.org/dtd/mybatis-3-mapper.dtd" "mybatis-3-mapper.dtd" >
<mapper namespace="com.zzhj.mapper.UsersMapper">
 	<resultMap type="users" id="ud">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<association property="departmentId" javaType="com.zzhj.po.Department">
			<result column="d_name" property="name"/>
		</association>
		<association property="roleId" javaType="com.zzhj.po.Roles">
			<result column="r_name" property="name"/>
		</association>
	</resultMap>
	
	
	 <resultMap type="users" id="ur">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<result column="image_name" property="imageName"/>
		<result column="phone" property="phone"/>
		<association property="roleId" javaType="com.zzhj.po.Roles">
			<id column="r_id" property="id"/>
			<result column="r_name" property="name"/>
		</association>
		<association property="departmentId" javaType="department">
			<result column="d_name" property="name"/>
		</association>
	</resultMap>
	
  	<select id="login" parameterType="users" resultMap="ur">
  		SELECT u.id,u.name,d.name as d_name,u.password,u.image_name,r.id as r_id,r.name as r_name FROM users u INNER JOIN roles r ON r.id =u.role_id inner join department d on d.id=u.departmentId  WHERE u.name=#{name} AND u.password=#{password}
  	</select>
  	<select id="queryOneUserInfo" parameterType="string" resultMap="ur">
  		SELECT u.id,u.name,d.name as d_name,u.password,u.image_name,r.id as r_id,r.name as r_name FROM users u INNER JOIN roles r ON r.id =u.role_id inner join department d on d.id=u.departmentId  WHERE u.name=#{value} 
  	</select>
  	<insert id="save" parameterType="users" keyProperty="id" useGeneratedKeys="true">
  		insert into users(name,password,sex,birthday,phone,departmentId,security_question_id,security_answer)values(#{name},#{password},#{sex},#{birthday},#{phone},#{departmentId.id},#{securityQuestionId.id},#{securityAnswer})
  	</insert>
  	<select id="queryAll" parameterType="int" resultMap="ud">
  		select u.name,u.password,u.id ,d.name as d_name from users u inner join department d on u.departmentId=d.id  limit #{startPage},#{rows}
  	</select>
  	<select id="roleQueryAll" parameterType="int" resultMap="ud">
  		select u.name,u.password,u.id ,d.name as d_name,r.name as r_name  from users u left join department d on u.departmentId=d.id left join roles r on r.id=u.role_id limit #{startPage},#{rows}
  	</select>
  	<select id="totalCount" resultType="int">
  		select count(id) from users
  	</select>
  	<delete id="deleteUser" parameterType="int" >
  		delete from users where id=#{value}
  	</delete>
  	<select id="query" parameterType="int" resultType="users">
  		select name from users where id=#{value}
  	</select>
  	<select id="exist" parameterType="string" resultType="int">
  		select count(id) from users where name=#{value}
  	</select>
  	<update id="updateRole" parameterType="users">
  		update users set role_id=#{roleId.id},parent_id=#{parentId},state=#{state} where name=#{name}
  	</update>
  	
  	<update id="updateUser" parameterType="users">
  		update users set password=#{password} where name=#{name} and security_answer=#{securityAnswer}
  	</update>
  	
  	<select id="queryUser" parameterType="string" resultType="users">
  		SELECT s.id,s.name FROM users s INNER JOIN department d ON d.id=s.departmentId INNER JOIN roles r ON s.role_id = r.id WHERE d.name=#{departmentName}  AND r.name=#{roleName}
  	</select>
  	
  	<select id="queryId" parameterType="String" resultType="string">
  		select u.id from users u inner join roles r on r.id=u.role_id where r.name=#{value}
  	</select>
  	
  	<select id="roleUser" parameterType="users" resultType="userNode">
  		select u.id,u.name as text,u.state,r.name as roleName,d.name as departmentName from users u inner join roles r on u.role_id=r.id 
  		inner join department d on u.departmentId=d.id where 
  		<if test="parentId!=null and parentId!=0">
  			u.parent_id=#{parentId}
  		</if>
  		<if test="parentId==null or parentId==0">
  			u.id=#{id}
  		</if>
  	</select>
  	<select id="userId" parameterType="String" resultType="users">
  		select u.name from users u inner join department d on d.id=u.departmentId INNER JOIN roles r ON r.id =u.role_id where d.name=#{value} and r.name="副总"
  	</select>
  	
  	<select id="parentId" parameterType="int" resultType="users">
  		select parent_id as parentId from users where id=#{value}
  	</select>
	<select id="departmentUser" parameterType="string" resultType="users">
			SELECT u.name FROM users u INNER JOIN department d ON u.departmentId = d.id WHERE d.name=#{value}
	</select>
	<select id="queryUserInfoOne" resultType="users" parameterType="int">
		select u.name,u.password,u.image_name as imageName,u.phone,u.induction_date as inductionDate,u.positiveDate,u.birthday,u.sex from users u where u.id=#{value} 
	</select>

	
	<update id="updateUserInfo" parameterType="users">
		update users set password=#{password},
		<if test="imageName!=null">
			image_name=#{imageName},
		</if>
		phone=#{phone},induction_date=#{inductionDate},positiveDate=#{positiveDate},birthday=#{birthday},sex=#{sex} where id=#{id}
	</update>
	
	<select id="searchUserInfo" parameterType="object" resultMap="ur">
			select u.image_name,u.name,u.id,u.phone,d.name as d_name,r.name as r_name  from users u inner join department d on u.departmentId=d.id inner join roles r on r.id=u.role_id
			<where>
				<if test="user.departmentId!=null and user.departmentId.id!=0">
					and u.departmentId=#{user.departmentId.id}
				</if>
				<if test='user.name!=null and user.name!="" '>
					and u.name like '%${user.name}%'
				</if>
			</where>
			limit #{startPage},#{rows}
	</select>
	
	<select id="querySubclass" parameterType="string" resultType="string">
		SELECT u.NAME FROM users u INNER JOIN department d ON u.departmentId=d.id INNER JOIN roles r ON r.id=u.role_id WHERE d.name=#{value} AND r.name='主管' 
	</select>
	
	<select id="querySubCount" parameterType="int" resultType="int">
		select count(id) from users where parent_id=#{value}
	</select>
	
	<select id="querySubZhuGuan" parameterType="string" resultType="string">
		SELECT u.NAME FROM users u INNER JOIN department d ON u.departmentId=d.id INNER JOIN roles r ON r.id=u.role_id WHERE  r.name='部门经理' and d.name=#{value}
	</select>
	
	<select id="userExist" parameterType="string" resultType="string">
		SELECT s.name FROM users u INNER JOIN security_question s ON s.id =u.security_question_id where u.name=#{value}
	</select>
	
	<select id="queryDepartmentAndRole" parameterType="string" resultType="string">
		SELECT u.name FROM users u INNER JOIN department d ON d.`id`=u.`departmentId` INNER JOIN roles r ON r.`id`=u.`role_id` WHERE d.name=#{departmentName} AND r.name=#{roleName} 
	</select>
	<select id="queryRoleUser" resultType="users" parameterType="string">
		SELECT u.name,u.id  FROM users u INNER JOIN roles r ON r.id=u.role_id WHERE r.name=#{value}
	</select>
	<update id="removeRole" parameterType="int">
		update users set role_id = null where id=#{value}
	</update>
	<update id="updateDepartment" parameterType="int">
		update users set departmentId=#{departmentId} where id=#{userId} 
	</update>
	<select id="queryBoss" resultMap="ur">
		SELECT u.name FROM users u INNER JOIN roles r ON u.role_id=r.id WHERE r.name ='总经理'
	</select>
</mapper>
